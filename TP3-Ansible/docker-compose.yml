version: "3.9"

services:

  postgres-tp:
    build: ./postgresql
    container_name: devops-postgres-tp-1
    volumes:
      - ./postgresql/data:/var/lib/postgresql/saved-data
      - ./postgresql/pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - app-network
      
  backend-tp-1:
    build: ./backend
    container_name: devops-backend-tp-1
    networks:
      - app-network
    depends_on:
      - postgres-tp
  
  backend-tp-2:
    build: ./backend
    container_name: devops-backend-tp-2
    networks:
      - app-network
    depends_on:
      - postgres-tp
      
  httpd-tp:
    build: ./httpd
    container_name: devops-httpd-tp-1
    ports:
      - 80:80
      - 8080:8080
    networks:
      - app-network
    depends_on:
      - postgres-tp
      
  frontend-tp:
    build: ./front
    container_name: devops-frontend-tp-1
    networks:
      - app-network
    depends_on:
      - httpd-tp
      
  prometheus-tp:
    image: prom/prometheus:v2.42.0
    container_name: devops-prometheus-tp-1
    restart: unless-stopped
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - 9090:9090
    networks:
      - app-network
    depends_on:
      - backend-tp-1
      - backend-tp-2
    
  grafana-tp:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    container_name: devops-grafana-tp-1
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - app-network
    depends_on:
      - prometheus-tp
    
networks:
  app-network:
    name: app-network
